{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/front/src/components/PETReport.js\",\n  _s = $RefreshSig$();\n// src/components/PETReport.js\nimport React, { useEffect, useState } from 'react';\nimport '../styles/PETStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PETReport = () => {\n  _s();\n  const [reportData, setReportData] = useState([]);\n  const [error, setError] = useState('');\n\n  // Función para obtener los datos del reporte de captura de PET\n  const fetchReportData = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Usa el token de autenticación si está disponible\n      const response = await fetch('http://localhost:5000/api/pet/pet-report', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setReportData(data);\n        setError('');\n      } else if (response.status === 403) {\n        setError('Acceso denegado. No tienes permisos para ver este reporte.');\n      } else if (response.status === 401) {\n        setError('Sesión expirada. Por favor, inicia sesión nuevamente.');\n      } else {\n        setError(`Error al obtener los datos del reporte: ${response.statusText}`);\n      }\n    } catch (error) {\n      setError('Error en la conexión con el servidor');\n      console.error('Error en la solicitud de datos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchReportData(); // Llamada a la función al cargar el componente\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pet-report\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reporte de Captura de PET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"pet-report-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Captura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Peso (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Precio (USD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Precio (MXN)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reportData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.capture_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.weight_kg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.price_usd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.price_mxn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PETReport, \"pVFZrqveBB5arNE2gcjGs73EGzU=\");\n_c = PETReport;\nexport default PETReport;\nvar _c;\n$RefreshReg$(_c, \"PETReport\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PETReport","_s","reportData","setReportData","error","setError","fetchReportData","token","localStorage","getItem","response","fetch","headers","ok","data","json","status","statusText","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","Date","capture_date","toLocaleDateString","weight_kg","price_usd","price_mxn","_c","$RefreshReg$"],"sources":["/home/ubuntu/front/src/components/PETReport.js"],"sourcesContent":["// src/components/PETReport.js\nimport React, { useEffect, useState } from 'react';\nimport '../styles/PETStyles.css';\n\nconst PETReport = () => {\n    const [reportData, setReportData] = useState([]);\n    const [error, setError] = useState('');\n\n    // Función para obtener los datos del reporte de captura de PET\n    const fetchReportData = async () => {\n        try {\n            const token = localStorage.getItem('token'); // Usa el token de autenticación si está disponible\n            const response = await fetch('http://localhost:5000/api/pet/pet-report', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setReportData(data);\n                setError('');\n            } else if (response.status === 403) {\n                setError('Acceso denegado. No tienes permisos para ver este reporte.');\n            } else if (response.status === 401) {\n                setError('Sesión expirada. Por favor, inicia sesión nuevamente.');\n            } else {\n                setError(`Error al obtener los datos del reporte: ${response.statusText}`);\n            }\n        } catch (error) {\n            setError('Error en la conexión con el servidor');\n            console.error('Error en la solicitud de datos:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchReportData(); // Llamada a la función al cargar el componente\n    }, []);\n\n    return (\n        <div className=\"pet-report\">\n            <h2>Reporte de Captura de PET</h2>\n            {error ? (\n                <p className=\"error-message\">{error}</p>\n            ) : (\n                <table className=\"pet-report-table\">\n                    <thead>\n                        <tr>\n                            <th>Fecha de Captura</th>\n                            <th>Peso (kg)</th>\n                            <th>Precio (USD)</th>\n                            <th>Precio (MXN)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {reportData.map((entry, index) => (\n                            <tr key={index}>\n                                <td>{new Date(entry.capture_date).toLocaleDateString()}</td>\n                                <td>{entry.weight_kg}</td>\n                                <td>{entry.price_usd}</td>\n                                <td>{entry.price_mxn}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n};\n\nexport default PETReport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}