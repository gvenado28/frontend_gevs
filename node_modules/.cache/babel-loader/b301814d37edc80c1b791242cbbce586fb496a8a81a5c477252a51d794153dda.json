{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Registrar las escalas y elementos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Dashboard = ({\n  userRole,\n  userEmail\n}) => {\n  _s();\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // Función para obtener los datos del reporte de captura de PET\n  const fetchReportData = useCallback(async () => {\n    try {\n      //const token = localStorage.getItem('token'); Usa el token de autenticación\n      const response = await fetch('http://localhost:5000/api/pet/pet-report', {\n        //headers: {\n        //  'Authorization': `Bearer ${token}`\n        //}\n      });\n      if (response.ok) {\n        const data = await response.json();\n\n        // Filtrar datos según el rol del usuario\n        if (userRole === 'admin') {\n          setWeeklyData(data);\n        } else {\n          setWeeklyData(data.filter(item => item.user_email === userEmail));\n        }\n        setFilteredData(data); // Por defecto, muestra todos los datos\n      } else {\n        console.error('Error al obtener los datos del reporte:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error en la solicitud de datos:', error);\n    }\n  }, [userRole, userEmail]);\n  useEffect(() => {\n    fetchReportData();\n  }, [fetchReportData]);\n  useEffect(() => {\n    if (startDate && endDate) {\n      const filtered = weeklyData.filter(data => new Date(data.capture_date) >= new Date(startDate) && new Date(data.capture_date) <= new Date(endDate));\n      setFilteredData(filtered);\n    } else {\n      setFilteredData(weeklyData);\n    }\n  }, [startDate, endDate, weeklyData]);\n\n  // Configuración de datos para el gráfico\n  const chartData = {\n    labels: filteredData.map(data => new Date(data.capture_date).toLocaleDateString()),\n    datasets: [{\n      label: 'Peso de PET recolectado (kg)',\n      data: filteredData.map(data => data.weight_kg),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }, {\n      label: 'Precio en USD',\n      data: filteredData.map(data => data.price_usd),\n      backgroundColor: 'rgba(54, 162, 235, 0.6)'\n    }, {\n      label: 'Precio en MXN',\n      data: filteredData.map(data => data.price_mxn),\n      backgroundColor: 'rgba(255, 206, 86, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard-title\",\n      children: \"Resumen de Captura Semanal de PET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Fecha de inicio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Fecha de fin:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DmngAUDnj8ONpyrbr0u3RtRnZ3s=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","userRole","userEmail","_s","weeklyData","setWeeklyData","filteredData","setFilteredData","startDate","setStartDate","endDate","setEndDate","fetchReportData","response","fetch","ok","data","json","filter","item","user_email","console","error","statusText","filtered","Date","capture_date","chartData","labels","map","toLocaleDateString","datasets","label","weight_kg","backgroundColor","price_usd","price_mxn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","options","responsive","plugins","legend","position","_c","$RefreshReg$"],"sources":["/home/ubuntu/front/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Registrar las escalas y elementos\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst Dashboard = ({ userRole, userEmail }) => {\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // Función para obtener los datos del reporte de captura de PET\n  const fetchReportData = useCallback(async () => {\n    try {\n      //const token = localStorage.getItem('token'); Usa el token de autenticación\n      const response = await fetch('http://localhost:5000/api/pet/pet-report', {\n        //headers: {\n        //  'Authorization': `Bearer ${token}`\n        //}\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n\n        // Filtrar datos según el rol del usuario\n        if (userRole === 'admin') {\n          setWeeklyData(data);\n        } else {\n          setWeeklyData(data.filter(item => item.user_email === userEmail));\n        }\n        setFilteredData(data); // Por defecto, muestra todos los datos\n      } else {\n        console.error('Error al obtener los datos del reporte:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error en la solicitud de datos:', error);\n    }\n  }, [userRole, userEmail]);\n\n  useEffect(() => {\n    fetchReportData();\n  }, [fetchReportData]);\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      const filtered = weeklyData.filter((data) =>\n        new Date(data.capture_date) >= new Date(startDate) &&\n        new Date(data.capture_date) <= new Date(endDate)\n      );\n      setFilteredData(filtered);\n    } else {\n      setFilteredData(weeklyData);\n    }\n  }, [startDate, endDate, weeklyData]);\n\n  // Configuración de datos para el gráfico\n  const chartData = {\n    labels: filteredData.map(data => new Date(data.capture_date).toLocaleDateString()),\n    datasets: [\n      {\n        label: 'Peso de PET recolectado (kg)',\n        data: filteredData.map(data => data.weight_kg),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      },\n      {\n        label: 'Precio en USD',\n        data: filteredData.map(data => data.price_usd),\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      },\n      {\n        label: 'Precio en MXN',\n        data: filteredData.map(data => data.price_mxn),\n        backgroundColor: 'rgba(255, 206, 86, 0.6)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2 className=\"dashboard-title\">Resumen de Captura Semanal de PET</h2>\n      <div className=\"filters\">\n        <label>\n          Fecha de inicio:\n          <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        </label>\n        <label>\n          Fecha de fin:\n          <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        </label>\n      </div>\n      <div className=\"chart-container\">\n        <Bar data={chartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}