{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/front/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Registrar las escalas y elementos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Dashboard = ({\n  userRole,\n  userEmail\n}) => {\n  _s();\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const navigate = useNavigate(); // Hook para redirigir al usuario si el token no es válido\n\n  // Función para obtener los datos del reporte de captura de PET\n  const fetchReportData = useCallback(async () => {\n    try {\n      const response = await fetch('http://54.177.153.3:5000/api/pet/pet-report', {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n\n        // Filtrar datos según el rol del usuario\n        if (userRole === 'admin') {\n          setWeeklyData(data);\n        } else {\n          setWeeklyData(data.filter(item => item.user_email === userEmail));\n        }\n        setFilteredData(data); // Por defecto, muestra todos los datos\n      } else if (response.status === 401) {\n        console.error('Error de autenticación');\n        navigate('/login'); // Redirige al login si hay un error de autenticación\n      } else {\n        console.error('Error al obtener los datos del reporte:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error en la solicitud de datos:', error);\n    }\n  }, [userRole, userEmail, navigate]);\n  useEffect(() => {\n    fetchReportData();\n  }, [fetchReportData]);\n  useEffect(() => {\n    if (startDate && endDate) {\n      const filtered = weeklyData.filter(data => new Date(data.capture_date) >= new Date(startDate) && new Date(data.capture_date) <= new Date(endDate));\n      setFilteredData(filtered);\n    } else {\n      setFilteredData(weeklyData);\n    }\n  }, [startDate, endDate, weeklyData]);\n\n  // Configuración de datos para el gráfico\n  const chartData = {\n    labels: filteredData.map(data => new Date(data.capture_date).toLocaleDateString()),\n    datasets: [{\n      label: 'Peso de PET recolectado (kg)',\n      data: filteredData.map(data => data.weight_kg),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }, {\n      label: 'Precio en USD',\n      data: filteredData.map(data => data.price_usd),\n      backgroundColor: 'rgba(54, 162, 235, 0.6)'\n    }, {\n      label: 'Precio en MXN',\n      data: filteredData.map(data => data.price_mxn),\n      backgroundColor: 'rgba(255, 206, 86, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dashboard-title\",\n      children: \"Resumen de Captura Semanal de PET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Fecha de inicio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Fecha de fin:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bvVIjFHq69CbT+YYHXEDQNoZRYc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","userRole","userEmail","_s","weeklyData","setWeeklyData","filteredData","setFilteredData","startDate","setStartDate","endDate","setEndDate","navigate","fetchReportData","response","fetch","headers","ok","data","json","filter","item","user_email","status","console","error","statusText","filtered","Date","capture_date","chartData","labels","map","toLocaleDateString","datasets","label","weight_kg","backgroundColor","price_usd","price_mxn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","options","responsive","plugins","legend","position","_c","$RefreshReg$"],"sources":["/home/ubuntu/front/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Registrar las escalas y elementos\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst Dashboard = ({ userRole, userEmail }) => {\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const navigate = useNavigate(); // Hook para redirigir al usuario si el token no es válido\n\n  // Función para obtener los datos del reporte de captura de PET\n  const fetchReportData = useCallback(async () => {\n    try {\n      const response = await fetch('http://54.177.153.3:5000/api/pet/pet-report', {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n\n        // Filtrar datos según el rol del usuario\n        if (userRole === 'admin') {\n          setWeeklyData(data);\n        } else {\n          setWeeklyData(data.filter(item => item.user_email === userEmail));\n        }\n        setFilteredData(data); // Por defecto, muestra todos los datos\n      } else if (response.status === 401) {\n        console.error('Error de autenticación');\n        navigate('/login'); // Redirige al login si hay un error de autenticación\n      } else {\n        console.error('Error al obtener los datos del reporte:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error en la solicitud de datos:', error);\n    }\n  }, [userRole, userEmail, navigate]);\n\n  useEffect(() => {\n    fetchReportData();\n  }, [fetchReportData]);\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      const filtered = weeklyData.filter((data) =>\n        new Date(data.capture_date) >= new Date(startDate) &&\n        new Date(data.capture_date) <= new Date(endDate)\n      );\n      setFilteredData(filtered);\n    } else {\n      setFilteredData(weeklyData);\n    }\n  }, [startDate, endDate, weeklyData]);\n\n  // Configuración de datos para el gráfico\n  const chartData = {\n    labels: filteredData.map(data => new Date(data.capture_date).toLocaleDateString()),\n    datasets: [\n      {\n        label: 'Peso de PET recolectado (kg)',\n        data: filteredData.map(data => data.weight_kg),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      },\n      {\n        label: 'Precio en USD',\n        data: filteredData.map(data => data.price_usd),\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      },\n      {\n        label: 'Precio en MXN',\n        data: filteredData.map(data => data.price_mxn),\n        backgroundColor: 'rgba(255, 206, 86, 0.6)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2 className=\"dashboard-title\">Resumen de Captura Semanal de PET</h2>\n      <div className=\"filters\">\n        <label>\n          Fecha de inicio:\n          <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        </label>\n        <label>\n          Fecha de fin:\n          <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        </label>\n      </div>\n      <div className=\"chart-container\">\n        <Bar data={chartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}